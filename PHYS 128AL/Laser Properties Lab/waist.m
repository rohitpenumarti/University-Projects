function [fitresult, gof] = waist(Distance1, Diameter,Uncertainty)
%CREATEFIT(DISTANCE1,DIAMETER)
%  Create a fit.
%
%  Data for 'untitled fit 2' fit:
%      X Input : Distance1
%      Y Output: Diameter
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 04-Nov-2019 07:59:46


%% Fit: 'untitled fit 2'.
[xData, yData, error] = prepareCurveData( Distance1, Diameter, Uncertainty(1:14) );

% Set up fittype and options.
ft = fittype( 'sin4' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
opts.Lower = [-Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf -Inf 0 -Inf];
opts.StartPoint = [0.572318092468909 0.241660973353061 -1.53079538015417 0.41376732203626 0.483321946706122 -0.897726232949272 0.106622600662128 0.966643893412244 2.76774716673438 0.043050444063653 1.44996584011837 0.846727042848769];

% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts );

% Plot fit with data.
figure( 'Name', 'untitled fit 2' );
h = plot( fitresult, xData, yData );
hold on
errorbar(xData, yData, error, '.')
hold off
legend( h, 'Diameter vs. Distance', 'Best Fit', 'Location', 'NorthEast', 'Interpreter', 'none' );
title('Diameter vs. Distance')
text(9,0.6,sprintf('SSE = %g\nRsq = %g\nAdj = %g\nRMSE = %g',gof.sse,gof.rsquare,gof.adjrsquare,gof.rmse))
% Label axes
xlabel( 'Distance (cm)', 'Interpreter', 'none' );
ylabel( 'Diameter (mm)', 'Interpreter', 'none' );
grid on


